############################################################################
# Model: Tacotron2
# Evaluation recipe
# Tokens: Raw characters (English text)
# Training: LJSpeech
# Authors: Artem Ploujnikov
# ############################################################################
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref ./results/tacotron2/<seed>

data_folder: !PLACEHOLDER
prepare_save_folder: !ref <data_folder>/prepared
pretrained_model_save_folder: !ref <prepare_save_folder>
evaluations: asr,mos
eval_dataset: valid
eval_suffix: ""
sorting: descending
splits: ["train", "valid", "test"]
split_ratio: [90, 5, 5]
skip_prep: False
skip_ignore_folders: False
frozen_split_path: null
batch_size: 8
eval_asr_source: !apply:speechbrain.utils.hparams.choice
  value: !ref <eval_asr_type>
  choices:
    encoder_decoder: speechbrain/asr-transformer-transformerlm-librispeech
    whisper: openai/whisper-small
eval_sample_rate: 16000
eval_samples: null
utmos_batch_size: 8
utmos_model_path: null
utmos_ckpt_name: epoch=3-step=7459.ckpt
utmos_ckpt_path: !ref <utmos_model_path>/<utmos_ckpt_name>
utmos_use_python: True
utmos_script: predict.py
tmp_folder: null

train_json: !ref <prepare_save_folder>/train.json
valid_json: !ref <prepare_save_folder>/valid.json
test_json: !ref <prepare_save_folder>/test.json


asr_source: speechbrain/asr-transformer-transformerlm-librispeech
tts_source: speechbrain/tts-tacotron2-ljspeech
mos_source: flexthink/ttseval-wavlm-transformer
vocoder_model: speechbrain/tts-hifigan-libritts-16kHz

vocoder: !name:speechbrain.inference.vocoders.HIFIGAN.from_hparams
    source: !ref <vocoder_model>
    savedir: !ref <pretrained_model_save_folder>/vocoder

eval_asr: !apply:speechbrain.utils.hparams.choice
  value: !ref <eval_asr_type>
  choices:
    encoder_decoder: !name:benchmarks.DASB.utils.eval.EncoderDecoderASRSpeechEvaluator
      source: !ref <eval_asr_source>
      sample_rate: !ref <eval_sample_rate>
      overrides:
        lm_weight: 0.0
    whisper: !name:benchmarks.DASB.utils.eval.WhisperASRSpeechEvaluator
      source: !ref <eval_asr_source>
      sample_rate: !ref <eval_sample_rate>

evaluators:
    asr: !ref <eval_asr>

bulk_evaluators:
  utmos: !name:benchmarks.DASB.utils.eval.UTMOSSpeechEvaluator
    model_path: !ref <utmos_model_path>
    output_folder: !ref <output_folder>
    ckpt_path: !ref <utmos_ckpt_path>
    batch_size: !ref <utmos_batch_size>
    script: !ref <utmos_script>
    use_python: !ref <utmos_use_python>
    tmp_folder: !ref <tmp_folder>


output_files:
    mos: !ref <output_folder>/mos.csv
    asr: !ref <output_folder>/asr.csv
    summary: !ref <output_folder>/summary.json

eval_summary:
  asr:
    descriptive: ["wer", "cer", "wer_ref", "cer_ref", "dwer", "dcer"]
  utmos:
    descriptive: ["utmos"]
